name: Build Glove80 Firmware

on:
  push:
    paths:
      - "config/**"
      - ".github/workflows/nix-build.yml"
      - "default.nix"
      - "app/**"
      - "nix/**"
    branches:
      - "main"
      - "custom-config"
    tags:
      - "**"
  pull_request:
    paths:
      - ".github/workflows/nix-build.yml"
      - "default.nix"
      - "app/**"
      - "nix/**"
  workflow_dispatch:
    branches:
      - "**"

jobs:
  build:
    name: Build Glove80 Firmware
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-22.05
      - uses: cachix/cachix-action@v15
        with:
          name: moergo-glove80-zmk-dev
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          skipPush: "${{ github.repository != 'moergo-sc/zmk' }}"
      - name: Build Glove80 combined firmware
        run: nix-build -A glove80_combined -o combined
      - name: Copy result out of nix store
        run: cp combined/glove80.uf2 glove80.uf2
      - name: Upload result
        uses: actions/upload-artifact@v4
        with:
          name: glove80.uf2
          path: glove80.uf2
  merge:
    name: Autobuild custom config
    if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/main' ) || ( github.event_name == 'pull_request' && github.event.pull_request.merged && github.base_ref == 'refs/heads/main' ) }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Set git config for automerge
        run: |
          git config --local user.email "44306739+Aerobreaker@users.noreply.github.com"
          git config --local user.name "Aerobreaker"
      - name: Merge to custom config branch
        run: |
          git fetch --unshallow
          COMMIT_MSG=$(git log -1 --pretty=%B)
          git checkout custom-config
          git pull
          git merge --no-ff main -m "${COMMIT_MSG} (Automerge to custom config)"
  merge:
    name: Autotag custom config
    if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/custom-config' ) || ( github.event_name == 'pull_request' && github.event.pull_request.merged && github.base_ref == 'refs/heads/custom-config' ) }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Set git config for autotag
        run: |
          git config --local user.email "44306739+Aerobreaker@users.noreply.github.com"
          git config --local user.name "Aerobreaker"
      - name: Create release tag
        if: ${{ ! startswith(github.event.head_commit.message, '[no-rel]') }}
        run: |
          git fetch --unshallow
          git checkout custom-config
          git pull
          COMMIT_MSG=$(git log -1 --pretty=%B)
          VERSION=$(echo $COMMIT_MSG | grep -Eq "^[vV][0-9]+(\.[0-9]*)?" && \
                      (echo $COMMIT_MSG | grep -q "\." && (echo $COMMIT_MSG | grep -oE "^[vV][0-9]+(\.[0-9]*)?") || echo "$(echo $COMMIT_MSG | grep -oE "^[vV][0-9]+").0") || \
                      (git describe --tags `git rev-list --tags --max-count=1` | awk -F. '{OFS="."; $NF += 1; print}')\
                    )
          git tag $VERSION
          git push origin custom-config --tags
  release:
    name: Create Release for Tag
    if: >-
      github.repository == 'Aerobreaker/glove80-zmk'
      && github.event_name == 'push'
      && contains(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download compiled firmware artifact
        uses: actions/download-artifact@v4
        with:
          name: glove80.uf2
          github-token: ${{ secrets.GH_TOKEN }}
      - name: Create Release for Tag
        uses: ncipollo/release-action@v1
        with:
          artifacts: "glove80.uf2"
          artifactErrorsFailBuild: true
          generateReleaseNotes: true
          token: ${{ secrets.GH_TOKEN }}
